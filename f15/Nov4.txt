x = 4----------------4 //this is good input, y'all
x = 4**4 //error - invalid input
x=x+2 //not an error as long as x has been established already

#1 Given a non-negative int n, return the sum of its digits recursively (no loops).

Example:
  1234
  return 10
Solution: can be done in one line/expression	

  public int sumInts(int n){
    if(n <= 9) return n; 
    else return n%10 + sumInts(n/10);
  }

  public int sumInts(int n){
    return (n==0) ? 0 : n%10 + sumInts(n/10);
  }

#2 Given integers base and n that are both 1 or more, compute recursively the value
  base to the power n.

  public long myPower(int base, int n){
    if (n == 1) return base;
    else return base * myPower(base, n-1);
  }

#3 Write a recursive method to print the number of 1s in the binary representation
  of a non-negative int n.

  //this is an entry method
  public void printOnes(int n){

  }

The answer to #3 will be a quiz on 11/4
